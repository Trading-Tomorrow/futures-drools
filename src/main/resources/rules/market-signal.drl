package rules
import function org.futures.services.FuturesService.debugLhsValue;
dialect "java"

import java.util.List;
import java.util.Map;
import java.util.HashMap;
import org.futures.model.PartialSignal;
import org.futures.model.MarketSignal;
import org.futures.model.ProfileWeights;
import org.futures.model.Hypothesis;

rule "calculate confidence"
agenda-group "conclusions"
when
    $signals : List() from collect(Hypothesis())
    $pw : ProfileWeights( $wBuy : buyW, $wSell : sellW, $wHold : holdW )
then

    double buy=0.0;
    double sell=0.0;
    double hold=0.0;
    double total=0.0;

    for(Object s:$signals){
        Hypothesis h = (Hypothesis)s;

        switch (h.getPartialDecision()){
            case "BUY":
                buy+=h.getConfidence();
                break;
            case "SELL":
                sell+=h.getConfidence();
                break;
            case "HOLD":
                hold+=h.getConfidence();
                break;
        }
        total+=h.getConfidence();
    }

        buy  = buy  * $wBuy;
        sell = sell * $wSell;
        hold = hold * $wHold;

        total = (buy + sell + hold);

    total=total==0?1:total;

    String finalDecision = "HOLD";
    double finalConf = 0.0;

    if (buy > sell * 1.1 && buy > hold) {
        finalDecision = "BUY";
        finalConf = buy / total;
    } else if (sell > buy * 1.1 && sell > hold) {
        finalDecision = "SELL";
        finalConf = sell / total;
    } else {
        finalConf = hold / total;
    }

    insert(new MarketSignal("ALL", finalDecision, finalConf, sell/total, buy/total, hold/total));

    System.out.println("─────────────────────────────────────────────");
    System.out.println("Aggregated MarketSignal (all signals combined)");
    System.out.println("    BUY:  " + String.format("%.2f", buy));
    System.out.println("    SELL: " + String.format("%.2f", sell));
    System.out.println("    HOLD: " + String.format("%.2f", hold));
    System.out.println("Final decision → " + finalDecision + " (confidence: " + String.format("%.2f", finalConf) + ")");
    System.out.println("─────────────────────────────────────────────");
end

