package rules

dialect "java"

import org.futures.model.Weather;
import org.futures.model.Commodity;
import org.futures.model.Hypothesis;
import org.futures.model.PartialSignal;
import org.futures.model.AvailableRegion;
import java.util.Map;
import java.util.HashMap;

rule "Drought - Brasil Arabica"
    agenda-group "arabica"
when
    $commodity :Commodity(name=="Arabica")
    $w : Weather(country=="Brasil",month==$commodity.getMonth())
    $r: AvailableRegion(country==$w.getCountry(),region==$w.getRegion())
    eval($w.getTemperature() > 24 && $w.getSpi()<=-1)
then
    double confidence=0.0;
    switch($w.getRegion()){
        case "Minas Gerais": confidence=0.93;break;
        case "São Paulo": confidence=0.82;break;
        case "Bahia": confidence=0.6;break;
    }

    Map<String, Object> factors = new HashMap<>();
    factors.put("month", $commodity.getMonth());
    factors.put("temperature", $w.getTemperature());
    factors.put("country", $w.getCountry());
    factors.put("region", $w.getRegion());
    factors.put("spi", $w.getSpi());

    insert(new Hypothesis($commodity.getName(),"Drought - Brasil",factors,confidence,"BUY"));

    System.out.println("Drought - country=" + $w.getCountry() + ", region=" + $w.getRegion() + ", commodity=" + $commodity.getName() + ", month=" + $commodity.getMonth() + ", temperature=" + $w.getTemperature() + ", spi=" + $w.getSpi() + ", confidence=" + confidence + ", action=BUY");
end

rule "Drought - Colombia Arabica"
    agenda-group "arabica"
when
    $commodity :Commodity(name=="Arabica")
    $w : Weather(country=="Colombia",month==$commodity.getMonth())
    $r: AvailableRegion(country==$w.getCountry(),region==$w.getRegion())
    eval($w.getTemperature() > 24 && $w.getSpi()<=-1)
then
    double confidence=0.0;
    switch($w.getRegion()){
        case "Andina Cafeeira" : confidence=0.86;break;
    }

    Map<String, Object> factors = new HashMap<>();
    factors.put("month", $commodity.getMonth());
    factors.put("temperature", $w.getTemperature());
    factors.put("country", $w.getCountry());
    factors.put("region", $w.getRegion());
    factors.put("spi", $w.getSpi());

    insert(new Hypothesis($commodity.getName(),"Drought - Colombia",factors,confidence,"BUY"));
    System.out.println("Drought - country=" + $w.getCountry() + ", region=" + $w.getRegion() + ", commodity=" + $commodity.getName() + ", month=" + $commodity.getMonth() + ", temperature=" + $w.getTemperature() + ", spi=" + $w.getSpi() + ", confidence=" + confidence + ", action=BUY");
end

rule "Drought - Brasil Robusta"
    agenda-group "robusta"
when
    $commodity :Commodity(name=="Robusta")
    $w : Weather(country=="Brasil",month==$commodity.getMonth())
    $r: AvailableRegion(country==$w.getCountry(),region==$w.getRegion())
    eval($w.getTemperature() > 33 && $w.getSpi()<=-1)
then
    double confidence=0.0;
    switch($w.getRegion()){
        case "Espirito Santo": confidence=0.77;break;
    }

    Map<String, Object> factors = new HashMap<>();
    factors.put("month", $commodity.getMonth());
    factors.put("temperature", $w.getTemperature());
    factors.put("country", $w.getCountry());
    factors.put("region", $w.getRegion());
    factors.put("spi", $w.getSpi());

    insert(new Hypothesis($commodity.getName(),"Drought - Brasil",factors,confidence,"BUY"));
    System.out.println("Drought - country=" + $w.getCountry() + ", region=" + $w.getRegion() + ", commodity=" + $commodity.getName() + ", month=" + $commodity.getMonth() + ", temperature=" + $w.getTemperature() + ", spi=" + $w.getSpi() + ", confidence=" + confidence + ", action=BUY");
end

rule "Drought - Vietnam Robusta"
    agenda-group "robusta"
when
   $commodity :Commodity(name=="Robusta")
   $w : Weather(country=="Vietnam",month==$commodity.getMonth())
   $r: AvailableRegion(country==$w.getCountry(),region==$w.getRegion())
   eval($w.getTemperature() > 33 && $w.getSpi()<=-1)
then
    double confidence=0.0;
   switch($w.getRegion()){
       case "Central Highlands": confidence=0.95;break;
   }

   Map<String, Object> factors = new HashMap<>();
    factors.put("month", $commodity.getMonth());
    factors.put("temperature", $w.getTemperature());
    factors.put("country", $w.getCountry());
    factors.put("region", $w.getRegion());
    factors.put("spi", $w.getSpi());

   insert(new Hypothesis($commodity.getName(),"Drought - Vietnam",factors,confidence,"BUY"));
    System.out.println("Drought - country=" + $w.getCountry() + ", region=" + $w.getRegion() + ", commodity=" + $commodity.getName() + ", month=" + $commodity.getMonth() + ", temperature=" + $w.getTemperature() + ", spi=" + $w.getSpi() + ", confidence=" + confidence + ", action=BUY");
end
rule "Ideal Weather - Brasil Arabica"
    agenda-group "arabica"
when
    $commodity :Commodity(name=="Arabica")
    $w : Weather(country=="Brasil",month==$commodity.getMonth())
    $r: AvailableRegion(country==$w.getCountry(),region==$w.getRegion())
    eval(18<=$w.getTemperature() && $w.getTemperature()<=24 && -1<$w.getSpi() && $w.getSpi()<1)
then
    double confidence=0.0;
    switch($w.getRegion()){
        case "Minas Gerais": confidence=0.89;break;
        case "São Paulo": confidence=0.76;break;
        case "Bahia": confidence=0.57;break;
    }

    Map<String, Object> factors = new HashMap<>();
    factors.put("month", $commodity.getMonth());
    factors.put("temperature", $w.getTemperature());
    factors.put("country", $w.getCountry());
    factors.put("region", $w.getRegion());
    factors.put("spi", $w.getSpi());


   insert(new Hypothesis($commodity.getName(),"Ideal Weather - Brasil",factors,confidence,"HOLD"));
    System.out.println("Ideal Weather - country=" + $w.getCountry() + ", region=" + $w.getRegion() + ", commodity=" + $commodity.getName() + ", month=" + $commodity.getMonth() + ", temperature=" + $w.getTemperature() + ", spi=" + $w.getSpi() + ", confidence=" + confidence + ", action=HOLD");
end

rule "Ideal Weather - Colombia Arabica"
    agenda-group "arabica"
when
    $commodity :Commodity(name=="Arabica")
    $w : Weather(country=="Colombia",month==$commodity.getMonth())
    $r: AvailableRegion(country==$w.getCountry(),region==$w.getRegion())
    eval(18<= $w.getTemperature() && $w.getTemperature()<=24 && -1<$w.getSpi() && $w.getSpi()<1)
then
    double confidence=0.0;
    switch($w.getRegion()){
        case "Andina Cafeeira" : confidence=0.79;break;
    }

    Map<String, Object> factors = new HashMap<>();
    factors.put("month", $commodity.getMonth());
    factors.put("temperature", $w.getTemperature());
    factors.put("country", $w.getCountry());
    factors.put("region", $w.getRegion());
    factors.put("spi", $w.getSpi());


   insert(new Hypothesis($commodity.getName(),"Ideal Weather - Colombia",factors,confidence,"HOLD"));
    System.out.println("Ideal Weather - country=" + $w.getCountry() + ", region=" + $w.getRegion() + ", commodity=" + $commodity.getName() + ", month=" + $commodity.getMonth() + ", temperature=" + $w.getTemperature() + ", spi=" + $w.getSpi() + ", confidence=" + confidence + ", action=HOLD");
end

rule "Ideal Weather - Brasil Robusta"
    agenda-group "robusta"
when
    $commodity :Commodity(name=="Robusta")
    $w : Weather(country=="Brasil",month==$commodity.getMonth())
    $r: AvailableRegion(country==$w.getCountry(),region==$w.getRegion())
    eval(24<=$w.getTemperature() && $w.getTemperature()<=33 && -1<$w.getSpi() && $w.getSpi()<1)
then
    double confidence=0.0;
    switch($w.getRegion()){
        case "Espirito Santo": confidence=0.72;break;
    }

    Map<String, Object> factors = new HashMap<>();
    factors.put("month", $commodity.getMonth());
    factors.put("temperature", $w.getTemperature());
    factors.put("country", $w.getCountry());
    factors.put("region", $w.getRegion());
    factors.put("spi", $w.getSpi());

   insert(new Hypothesis($commodity.getName(),"Ideal weather - Brasil",factors,confidence,"HOLD"));
    System.out.println("Ideal Weather - country=" + $w.getCountry() + ", region=" + $w.getRegion() + ", commodity=" + $commodity.getName() + ", month=" + $commodity.getMonth() + ", temperature=" + $w.getTemperature() + ", spi=" + $w.getSpi() + ", confidence=" + confidence + ", action=HOLD");
end

rule "Ideal Weather - Vietnam Robusta"
    agenda-group "robusta"
when
    $commodity :Commodity(name=="Robusta")
    $w : Weather(country=="Vietnam",month==$commodity.getMonth())
    $r: AvailableRegion(country==$w.getCountry(),region==$w.getRegion())
    eval(24<=$w.getTemperature() && $w.getTemperature()<=33 && -1<$w.getSpi() && $w.getSpi()<1)
then
    double confidence=0.0;
   switch($w.getRegion()){
       case "Central Highlands": confidence=0.92;break;
   }

   Map<String, Object> factors = new HashMap<>();
    factors.put("month", $commodity.getMonth());
    factors.put("temperature", $w.getTemperature());
    factors.put("country", $w.getCountry());
    factors.put("region", $w.getRegion());
    factors.put("spi", $w.getSpi());

   insert(new Hypothesis($commodity.getName(),"Ideal Weather - Vietnam",factors,confidence,"HOLD"));
   System.out.println("Ideal Weather - country=" + $w.getCountry() + ", region=" + $w.getRegion() + ", commodity=" + $commodity.getName() + ", month=" + $commodity.getMonth() + ", temperature=" + $w.getTemperature() + ", spi=" + $w.getSpi() + ", confidence=" + confidence + ", action=HOLD");
end

rule "Non-Ideal conditions - Brasil Arabica"
    agenda-group "arabica"
when
    $commodity :Commodity(name=="Arabica")
    $w : Weather(country=="Brasil",month==$commodity.getMonth())
    $r: AvailableRegion(country==$w.getCountry(),region==$w.getRegion())
    eval(!(($w.getTemperature() > 24 && $w.getSpi()<=-1) || (18<=$w.getTemperature() && $w.getTemperature()<=24 && -1<$w.getSpi() && $w.getSpi()<1)))
then
    double confidence=0.0;
    switch($w.getRegion()){
        case "Minas Gerais": confidence=0.89;break;
        case "São Paulo": confidence=0.76;break;
        case "Bahia": confidence=0.57;break;
    }

    Map<String, Object> factors = new HashMap<>();
    factors.put("month", $commodity.getMonth());
    factors.put("temperature", $w.getTemperature());
    factors.put("country", $w.getCountry());
    factors.put("region", $w.getRegion());
    factors.put("spi", $w.getSpi());


   insert(new Hypothesis($commodity.getName(),"Non-Ideal weather - Brasil",factors,confidence,"BUY"));
   System.out.println("Non-Ideal weather - country=" + $w.getCountry() + ", region=" + $w.getRegion() + ", commodity=" + $commodity.getName() + ", month=" + $commodity.getMonth() + ", temperature=" + $w.getTemperature() + ", spi=" + $w.getSpi() + ", confidence=" + confidence + ", action=BUY");

end

rule "Non-Ideal conditions - Colombia Arabica"
    agenda-group "arabica"
when
    $commodity :Commodity(name=="Arabica")
    $w : Weather(country=="Colombia",month==$commodity.getMonth())
    $r: AvailableRegion(country==$w.getCountry(),region==$w.getRegion())
    eval(!(($w.getTemperature() > 24 && $w.getSpi()<=-1) || (18<=$w.getTemperature() && $w.getTemperature()<=24 && -1<$w.getSpi() && $w.getSpi()<1)))
then
    double confidence=0.0;
    switch($w.getRegion()){
        case "Andina Cafeeira" : confidence=0.79;break;
    }

    Map<String, Object> factors = new HashMap<>();
    factors.put("month", $commodity.getMonth());
    factors.put("temperature", $w.getTemperature());
    factors.put("country", $w.getCountry());
    factors.put("region", $w.getRegion());
    factors.put("spi", $w.getSpi());


   insert(new Hypothesis($commodity.getName(),"Non-Ideal weather - Colombia",factors,confidence,"BUY"));
   System.out.println("Non-Ideal weather - country=" + $w.getCountry() + ", region=" + $w.getRegion() + ", commodity=" + $commodity.getName() + ", month=" + $commodity.getMonth() + ", temperature=" + $w.getTemperature() + ", spi=" + $w.getSpi() + ", confidence=" + confidence + ", action=BUY");
end

rule "Non-Ideal conditions - Brasil Robusta"
    agenda-group "robusta"
when
    $commodity :Commodity(name=="Robusta")
    $w : Weather(country=="Brasil",month==$commodity.getMonth())
    $r: AvailableRegion(country==$w.getCountry(),region==$w.getRegion())
    eval(!(($w.getTemperature() > 33 && $w.getSpi()<=-1) || (24<= $w.getTemperature() && $w.getTemperature()<=33 && -1<$w.getSpi() && $w.getSpi()<1)))
then
    double confidence=0.0;
    switch($w.getRegion()){
        case "Espirito Santo": confidence=0.72;break;
    }

    Map<String, Object> factors = new HashMap<>();
    factors.put("month", $commodity.getMonth());
    factors.put("temperature", $w.getTemperature());
    factors.put("country", $w.getCountry());
    factors.put("region", $w.getRegion());
    factors.put("spi", $w.getSpi());

   insert(new Hypothesis($commodity.getName(),"Non-Ideal weather - Brasil",factors,confidence,"BUY"));
   System.out.println("Non-Ideal Weather - country=" + $w.getCountry() + ", region=" + $w.getRegion() + ", commodity=" + $commodity.getName() + ", month=" + $commodity.getMonth() + ", temperature=" + $w.getTemperature() + ", spi=" + $w.getSpi() + ", confidence=" + confidence + ", action=BUY");
end

rule "Non-Ideal conditions - Vietnam Robusta"
    agenda-group "robusta"
when
   $commodity :Commodity(name=="Robusta")
   $w : Weather(country=="Vietnam",month==$commodity.getMonth())
    $r: AvailableRegion(country==$w.getCountry(),region==$w.getRegion())
    eval(!(($w.getTemperature() > 33 && $w.getSpi()<=-1) || (24<=$w.getTemperature() && $w.getTemperature()<=33 && -1<$w.getSpi() && $w.getSpi()<1)))
then
    double confidence=0.0;
    switch($w.getRegion()){
        case "Central Highlands": confidence=0.92;break;
    }

    Map<String, Object> factors = new HashMap<>();
    factors.put("month", $commodity.getMonth());
    factors.put("temperature", $w.getTemperature());
    factors.put("country", $w.getCountry());
    factors.put("region", $w.getRegion());
    factors.put("spi", $w.getSpi());

   insert(new Hypothesis($commodity.getName(),"Non-Ideal weather - Vietnam",factors,confidence,"BUY"));
   System.out.println("Non-Ideal weather - country=" + $w.getCountry() + ", region=" + $w.getRegion() + ", commodity=" + $commodity.getName() + ", month=" + $commodity.getMonth() + ", temperature=" + $w.getTemperature() + ", spi=" + $w.getSpi() + ", confidence=" + confidence + ", action=BUY");
end


