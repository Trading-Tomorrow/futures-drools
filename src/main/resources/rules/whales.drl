package rules

dialect "java"

import org.futures.model.Commodity;
import org.futures.model.Volume;
import org.futures.model.Hypothesis;
import org.futures.model.PartialSignal
import java.util.HashMap
import java.util.Map;


rule "Whale accumulation detected"
when
    $commodity :Commodity()
    $v : Volume(month==$commodity.getMonth(),commodity==$commodity.getName())
    eval($v.getBuyVolume() > ($v.getBuyVolume7d() * 2) && $v.getOpenInterest()>5 && $v.getTradeSize()>=50)
then
    Map<String,Object> factors = new HashMap<>();
    factors.put("buyVolume", $v.getBuyVolume());
    factors.put("buyVolume7d", $v.getBuyVolume7d());
    factors.put("openInterest", $v.getOpenInterest());
    factors.put("tradeSize", $v.getTradeSize());
    factors.put("month", $v.getMonth());


    insert(new Hypothesis($v.getCommodity(),"Whale accumulation", factors, 0.88, "BUY"));
    System.out.println("Whale accumulation - commodity=" + $v.getCommodity() + ", month=" + $v.getMonth() + ", buyVolume=" + $v.getBuyVolume() + ", buyVolume7d=" + $v.getBuyVolume7d() + ", openInterest=" + $v.getOpenInterest() + ", tradeSize=" + $v.getTradeSize() + ", confidence=0.9"+ ", action=BUY");
end

rule "Whale distribution detected"
when
    $commodity :Commodity()
    $v : Volume(month==$commodity.getMonth(),commodity==$commodity.getName())
    eval($v.getBuyVolume() > ($v.getBuyVolume7d() * 2) && $v.getOpenInterest()<-5 && $v.getTradeSize()>=50)
then
    Map<String,Object> factors = new HashMap<>();
    factors.put("buyVolume", $v.getBuyVolume());
    factors.put("buyVolume7d", $v.getBuyVolume7d());
    factors.put("openInterest", $v.getOpenInterest());
    factors.put("tradeSize", $v.getTradeSize());
    factors.put("month", $v.getMonth());


    insert(new Hypothesis($v.getCommodity(),"Whale distribution", factors, 0.88, "SELL"));
    System.out.println("Whale distribution - commodity=" + $v.getCommodity() + ", month=" + $v.getMonth() + ", buyVolume=" + $v.getBuyVolume() + ", buyVolume7d=" + $v.getBuyVolume7d() + ", openInterest=" + $v.getOpenInterest() + ", tradeSize=" + $v.getTradeSize() + ", confidence=0.9"+ ", action=SELL");
end

rule "Normal market volume"
when
    $commodity :Commodity()
    $v : Volume(month==$commodity.getMonth(),commodity==$commodity.getName())
    eval($v.getBuyVolume() <= ($v.getBuyVolume7d() * 2) && ($v.getOpenInterest()>= -5 && $v.getOpenInterest()<=5))
then
    Map<String,Object> factors = new HashMap<>();
    factors.put("buyVolume", $v.getBuyVolume());
    factors.put("buyVolume7d", $v.getBuyVolume7d());
    factors.put("openInterest", $v.getOpenInterest());
    factors.put("tradeSize", $v.getTradeSize());
    factors.put("month", $v.getMonth());


    insert(new Hypothesis($v.getCommodity(),"Normal market volume", factors, 0.5, "HOLD"));
    System.out.println("Normal volume - commodity=" + $v.getCommodity() + ", month=" + $v.getMonth() + ", buyVolume=" + $v.getBuyVolume() + ", buyVolume7d=" + $v.getBuyVolume7d() + ", openInterest=" + $v.getOpenInterest() + ", tradeSize=" + $v.getTradeSize() + ", confidence=0.5"+ ", action=HOLD");
end

